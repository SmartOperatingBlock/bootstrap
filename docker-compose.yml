---
version: '3'
services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    depends_on:
      - zookeeper
    expose:
      - "29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.5.2
    container_name: kafka_initializer
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic tracking-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic room-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic process-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic surgery-bookings-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic automation-proposal-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic automation-requests-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic process-manual-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic process-summary-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic emergency-surgery-events --replication-factor 1 --partitions 1
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "    
      
  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.2
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  dt-event-gateway:
    image: ghcr.io/smartoperatingblock/dt-event-gateway:1.7.15
    container_name: dt-event-gateway
    depends_on:
      - init-kafka
    environment:
      SIGNALR_CONNECTION_STRING: ${SIGNALR_CONNECTION_STRING}
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    entrypoint: ./gradlew run

  thing-description-directory:
    image: ghcr.io/tinyiot/thing-directory:v1.0.0-beta.26
    container_name: thing-description-directory
    ports:
      - 4000:8081

  medical-instrument-integration-microservice:
    image: ghcr.io/smartoperatingblock/medical-instrument-integration-microservice:1.2.10
    container_name: medical-instrument-integration-microservice
    ports:
      - 3000:3000
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}

  user-management-integration-microservice:
    image: ghcr.io/smartoperatingblock/user-management-integration-microservice:1.0.16
    container_name: user-management-integration-microservice
    ports:
      - 3001:3000
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}
      USER_MANAGEMENT_MONGODB_URL: ${USER_MANAGEMENT_MONGODB_URL}

  surgery-booking-integration-microservice:
    image: ghcr.io/smartoperatingblock/surgery-booking-integration-microservice:1.3.9
    container_name: surgery-booking-integration-microservice
    ports:
      - 3002:3000
    depends_on:
      - patient-management-integration-microservice
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}
      PATIENT_MANAGEMENT_INTEGRATION_MICROSERVICE_URL: http://patient-management-integration-microservice:3000/api/v1

  patient-management-integration-microservice:
    image: ghcr.io/smartoperatingblock/patient-management-integration-microservice:1.0.15
    container_name: patient-management-integration-microservice
    ports:
      - 3003:3000
    environment:
      PATIENT_MANAGEMENT_MONGODB_URL: ${PATIENT_MANAGEMENT_MONGODB_URL}

  staff-tracking-microservice:
    image: ghcr.io/smartoperatingblock/staff-tracking-microservice:1.0.12
    container_name: staff-tracking-microservice
    ports:
      - 3004:3000
    depends_on:
      - init-kafka
    environment:
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      STAFF_TRACKING_MONGODB_URL: ${STAFF_TRACKING_MONGODB_URL}
      
  automation-management-microservice:
    image: ghcr.io/smartoperatingblock/automation-management-microservice:1.1.6
    container_name: automation-management-microservice
    depends_on:
      - init-kafka
      - thing-description-directory
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFIG_PATH: ./config/config.yml
      THING_DESCRIPTION_DIRECTORY_BASE_URL: http://thing-description-directory:8081/things/
    volumes:
      - ./config:/config

  building-management-microservice:
    image: ghcr.io/smartoperatingblock/building-management-microservice:1.4.23
    container_name: building-management-microservice
    ports:
      - 3005:3000
    depends_on:
      - init-kafka
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      MONGODB_CONNECTION_STRING: ${BUILDING_MANAGEMENT_MONGODB_URL}

  surgical-process-monitoring-microservice:
    image: ghcr.io/smartoperatingblock/surgical-process-monitoring-microservice:1.2.21
    container_name: surgical-process-monitoring-microservice
    ports:
      - 3006:3000
    depends_on:
      - init-kafka
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_DT_ENDPOINT: ${AZURE_DT_ENDPOINT}
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      SURGICAL_PROCESS_MONGODB_URL: ${SURGICAL_PROCESS_MONGODB_URL}

  surgery-report-microservice:
    image: ghcr.io/smartoperatingblock/surgery-report-microservice:1.0.17
    container_name: surgery-report-microservice
    ports:
      - 3007:3000
    depends_on:
      - patient-management-integration-microservice
      - staff-tracking-microservice
      - building-management-microservice
    environment:
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      MONGODB_CONNECTION_STRING: ${SURGERY_REPORT_MONGODB_URL}
      PATIENT_MANAGEMENT_INTEGRATION_MICROSERVICE_URL: http://patient-management-integration-microservice:3000/api/v1
      STAFF_TRACKING_MICROSERVICE_URL: http://staff-tracking-microservice:3000/api/v1
      BUILDING_MANAGEMENT_MICROSERVICE_URL: http://building-management-microservice:3000/api/v1

  api-gateway-microservice:
    image: ghcr.io/smartoperatingblock/api-gateway-microservice:1.1.23
    container_name: api-gateway-microservice
    ports:
      - 3008:3000
      - 3009:3001
    depends_on:
      - staff-tracking-microservice
      - surgical-process-monitoring-microservice
      - building-management-microservice
      - user-management-integration-microservice
      - automation-management-microservice
      - surgery-report-microservice

    environment:
      BOOTSTRAP_SERVER_URL: http://broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      USER_MANAGEMENT_MICROSERVICE_URL: http://user-management-integration-microservice:3000/api/v1
      STAFF_TRACKING_MICROSERVICE_URL: http://staff-tracking-microservice:3000/api/v1
      BUILDING_MANAGEMENT_MICROSERVICE_URL: http://building-management-microservice:3000/api/v1
      SURGERY_REPORT_MICROSERVICE_URL: http://surgery-report-microservice:3000/api/v1
      SURGICAL_PROCESS_MONITORING_MICROSERVICE_URL: http://surgical-process-monitoring-microservice:3000/api/v1

